package com.gotchaslots.slots.mobile.ui.machine.presentation
{
	import com.gotchaslots.slots.assets.common.fountain.FountainEmbed;
	import com.gotchaslots.slots.mobile.data.Main;
	import com.gotchaslots.slots.mobile.data.application.locale.L10NHandler;
	import com.gotchaslots.slots.mobile.data.machine.symbol.base.BaseScatterSymbolData;
	import com.gotchaslots.slots.mobile.data.machine.valuator.scatter.MultiplierValuatorData;
	import com.gotchaslots.slots.mobile.ui.common.components.freeActionScript.fountain.Fountains;
	import com.gotchaslots.slots.mobile.ui.machine.MachineView;
	import com.gotchaslots.slots.mobile.ui.machine.presentation.base.BaseScatterPresentation;
	import com.gotchaslots.slots.mobile.utils.ex.TimerEx;
	import com.gotchaslots.slots.mobile.utils.helpers.FormatterHelper;
	import com.gotchaslots.slots.mobile.utils.sounds.SoundsManager;
	
	import flash.events.TimerEvent;
	
	public class MultiplierPresentation extends BaseScatterPresentation
	{
		// properties
		protected override function get ValuatorClass():Class
		{
			return MultiplierValuatorData;
		}
		protected override function get RemoveByTween():Boolean
		{
			return true;
		}
		protected override function get BlinkSoundKey():String
		{
			return SoundsManager.Machine_Sequence_Multiplier_Blink
		}
		
		// class
		public function MultiplierPresentation(onClick:Function, onClose:Function, view:MachineView)
		{
			super(306, onClick, onClose, view);
		}
		
		// methods
		protected override function DoFlipper2():void
		{
			DoBlinkScatter(1, 4, _valuatorsHandler.Multiplier.Payboxes, BaseScatterSymbolData(_valuatorsHandler.Multiplier.Symbol));
		}
		public override function DoPostBlinkScatter():void
		{
			var fountains:Fountains = new Fountains(20, 20, FountainEmbed.Multiplier);
			addChild(fountains);
			fountains.Play();
			
			Main.Instance.ActiveMachine.Win += _valuatorsHandler.Multiplier.Chips;
			Main.Instance.Application.Ticker.PushMessage(Main.Instance.Application.L10N.ActiveLocale.GetString(L10NHandler.You_Won) + ": " + FormatterHelper.NumberToMoney(Main.Instance.ActiveMachine.Win),
				Main.Instance.Application.L10N.ActiveLocale.GetString(L10NHandler.Multiplier) + ": " + FormatterHelper.NumberToMoney(Main.Instance.ActiveMachine.SelectedBetChips) + " x " + _valuatorsHandler.Multiplier.Payout + " = " + FormatterHelper.NumberToMoney(_valuatorsHandler.Multiplier.Chips),
				true, 500);
			
			var postTimer:TimerEx = new TimerEx(2000);
			postTimer.addEventListener(TimerEvent.TIMER, OnPostTimer);
			postTimer.start();
		}
		private function OnPostTimer(event:TimerEvent):void
		{
			var postTimer:TimerEx = TimerEx(event.currentTarget);
			if (postTimer)
			{
				postTimer.Dispose();
				postTimer = null;
			}
			
			DoPostParticle();
		}
	}
}