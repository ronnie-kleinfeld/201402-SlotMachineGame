<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.milkmangames.nativeextensions"><apiName>com.milkmangames.nativeextensions</apiName><apiDetail/><apiClassifier id="com.milkmangames.nativeextensions:GoViral"><apiName>GoViral</apiName><shortdesc> GoViral Native Extension </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GoViral Native Extension </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVShareEvent_SOCIAL_COMPOSER_FINISHED"><apiName>SOCIAL_COMPOSER_FINISHED</apiName><shortdesc> Dispatched when a social composer view is finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVShareEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a social composer view is finished </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVShareEvent_SOCIAL_COMPOSER_CANCELED"><apiName>SOCIAL_COMPOSER_CANCELED</apiName><shortdesc> Dispatched when a social composer view is canceled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVShareEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a social composer view is canceled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVShareEvent_GENERIC_MESSAGE_SHARED"><apiName>GENERIC_MESSAGE_SHARED</apiName><shortdesc> Dispatched after a Generic message sharing intent has been completed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVShareEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a Generic message sharing intent has been completed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_FAILED"><apiName>MAIL_FAILED</apiName><shortdesc> Dispatched when an email dialog fails </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when an email dialog fails </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_SENT"><apiName>MAIL_SENT</apiName><shortdesc> Dispatched when the user sends an email </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user sends an email </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_SAVED"><apiName>MAIL_SAVED</apiName><shortdesc> Dispatched when the user saves an email </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user saves an email </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_CANCELED"><apiName>MAIL_CANCELED</apiName><shortdesc> Dispatched when a mail dialog is cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a mail dialog is cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVTwitterEvent_TW_DIALOG_FAILED"><apiName>TW_DIALOG_FAILED</apiName><shortdesc> Dispatched when a Twitter Dialog has Failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog has Failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVTwitterEvent_TW_DIALOG_CANCELED"><apiName>TW_DIALOG_CANCELED</apiName><shortdesc> Dispatched when a Twitter Dialog was cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog was cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVTwitterEvent_TW_DIALOG_FINISHED"><apiName>TW_DIALOG_FINISHED</apiName><shortdesc> Dispatched when a Twitter Dialog is Finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog is Finished </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_PERMISSIONS_REFRESH_FAILED"><apiName>FB_PERMISSIONS_REFRESH_FAILED</apiName><shortdesc> Dispatched after a call to refresh Facebook session Permissions has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a call to refresh Facebook session Permissions has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_PERMISSIONS_REFRESHED"><apiName>FB_PERMISSIONS_REFRESHED</apiName><shortdesc> Dispatched after a successful call to refresh Facebook session Permissions </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to refresh Facebook session Permissions </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_AD_ID_RESPONSE"><apiName>FB_AD_ID_RESPONSE</apiName><shortdesc> Facebook Mobile App Ad ID Response </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Facebook Mobile App Ad ID Response </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_PUBLISH_PERMISSIONS_FAILED"><apiName>FB_PUBLISH_PERMISSIONS_FAILED</apiName><shortdesc> Dispatched after a call to request new Facebook Publish Permissions has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a call to request new Facebook Publish Permissions has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_PUBLISH_PERMISSIONS_UPDATED"><apiName>FB_PUBLISH_PERMISSIONS_UPDATED</apiName><shortdesc> Dispatched after a successful call to request new Facebook Publish Permissions </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to request new Facebook Publish Permissions </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_READ_PERMISSIONS_FAILED"><apiName>FB_READ_PERMISSIONS_FAILED</apiName><shortdesc> Dispatched after a call to request new Facebook Read Permissions has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a call to request new Facebook Read Permissions has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_READ_PERMISSIONS_UPDATED"><apiName>FB_READ_PERMISSIONS_UPDATED</apiName><shortdesc> Dispatched after a successful call to request new Facebook Read Permissions </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to request new Facebook Read Permissions </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_REQUEST_FAILED"><apiName>FB_REQUEST_FAILED</apiName><shortdesc> Dispatched when a Facebook  Graph Request has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook  Graph Request has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_REQUEST_RESPONSE"><apiName>FB_REQUEST_RESPONSE</apiName><shortdesc> Dispatched when a Facebook Graph Request returns a response </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Graph Request returns a response </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_DIALOG_FAILED"><apiName>FB_DIALOG_FAILED</apiName><shortdesc> Dispatched when a Facebook Dialog has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Dialog has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_DIALOG_CANCELED"><apiName>FB_DIALOG_CANCELED</apiName><shortdesc> Dispatched when a Facebook Dialog is cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Dialog is cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_DIALOG_FINISHED"><apiName>FB_DIALOG_FINISHED</apiName><shortdesc> Dispatched When a Facebook Dialog has finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When a Facebook Dialog has finished </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_SESSION_INVALIDATED"><apiName>FB_SESSION_INVALIDATED</apiName><shortdesc> Dispatched when the Facebook auth session is invalidated- for instance by the user revoking your permissions, or changing their password </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the Facebook auth session is invalidated- for instance by the user revoking your permissions, or changing their password </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_LOGIN_FAILED"><apiName>FB_LOGIN_FAILED</apiName><shortdesc> Dispatched When Facebook Login fails </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When Facebook Login fails </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_LOGIN_CANCELED"><apiName>FB_LOGIN_CANCELED</apiName><shortdesc> Dispatched When the User cancelled Facebook Login </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When the User cancelled Facebook Login </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_LOGGED_OUT"><apiName>FB_LOGGED_OUT</apiName><shortdesc> Dispatched when the user has logged out with Facebook </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user has logged out with Facebook </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GoViral_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_LOGGED_IN"><apiName>FB_LOGGED_IN</apiName><shortdesc> Dispatched When the user has logged in with Facebook </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When the user has logged in with Facebook </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="com.milkmangames.nativeextensions:GoViral:GoViral"><apiName>GoViral</apiName><shortdesc>
	 Do not call this directly; use GoViral.create() to initialize or GoViral.goViral to get current instance.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>logCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc>
	 Do not call this directly; use GoViral.create() to initialize or GoViral.goViral to get current instance.
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions:GoViral:authenticateWithFacebook"><apiName>authenticateWithFacebook</apiName><shortdesc>
	 Log the user into Facebook.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>readPermissions</apiItemName><apiType value="String"/><apiData>public_profile</apiData><apiDesc> A comma-separated list of READ permission options for the app.  Note that you should include only read permissions, not publish permissions.  Publish permissions must be requested later, either through a call to facebookGraphRequest(), or manually with requestNewFacebookPublishPermissions().  You should include at least one read permission, such as 'public_profile', if the user has never authenticated with your app before.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Log the user into Facebook.  The user must be authenticated with Facebook before calling any Facebook dialog or API methods.  
	 
	 Upon calling authenticateWithFacebook(), the user will be presented with a dialog asking them to grant permissions to your app to use their account.  
	 
	 If the official Facebook app is installed, and the device supports multitasking, the app will task switch to the Facebook app to authenticate the user, then return to your app on completion.  If the official Facebook app is not installed, and the device supports multi-tasking, the app will task switch to the browser and present an authentication dialog there; on completion, your app will be returned to the foreground.
	 
	 If the device does not support multitasking, an authentication dialog will be presented inside your own app.
	 
	 A GVFaceBookEvent indicating the result will be dispatched when the login succeeds, fails, or is cancelled by the user- with the type of GVFacebookEvent.FB_LOGGED_IN, GVFacebookEvent.FB_LOGIN_FAILED, GVFacebookEvent.FB_LOGIN_CANCELED, respectively, and GVFacebookEvent.FB_LOGGED_OUT will be dispatched when and if the user logs out.
	 
	 You may check GoViral.goViral.isFacebookAuthenticated() first to determine if the user is already logged in.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/reference/api/permissions/"><linktext>http://developers.facebook.com/docs/reference/api/permissions/</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:create"><apiName>create</apiName><shortdesc>
	 Initializes the GoViral Extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>if GoViral has already been initialized.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>initialized instance of GoViral extension interface.
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GoViral</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
	 Initializes the GoViral Extension.  You should check GoViral.isSupported first to ensure the platform is supported. GoViral is a Singleton and you may have only one instance.  After creation, you may access the instance through the static property GoViral.goViral .
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:displaySocialComposerView"><apiName>displaySocialComposerView</apiName><shortdesc>
	 Displays a window to the user to send a message, with the given service type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVShareDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>serviceType</apiItemName><apiType value="String"/><apiDesc>the service for which to display the composer - one of GVSocialServiceType.FACEBOOK, GVSocialServiceType.TWITTER, GVSocialsServiceType.SMS, or GVSocialServiceType.SINAWEIBO.
	 </apiDesc></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the message to display in this post
	 </apiDesc></apiParam><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiData>null</apiData><apiDesc>optionally, a bitmapData image to display in the post
	 </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>optionally, an url to attach to the post
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays a window to the user to send a message, with the given service type.
	 
	 You should always check isSocialServiceAvailable(serviceType) first, to ensure that the service is available.  This feature is available on iOS 6+, and some Android devices only.  For similar functionality that is available on Android and lower iOS versions, use the direct Twitter, Facebook, Mail, or Generic Share functions of GoViral.
	 
	 When the modal is completed, GVShareEvent.SOCIAL_COMPOSER_FINISHED or GVShareEvent.SOCIAL_COMPOSER_CANCELED will be dispatched, depending on the action of the user.  On Android, GVShareEvent.SOCIAL_COMPOSER_FINISHED is always dispatched in response.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVShareEvent"><linktext>com.milkmangames.nativeextensions.events.GVShareEvent</linktext></link><link href="com.milkmangames.nativeextensions.xml#GVSocialServiceType"><linktext>com.milkmangames.nativeextensions.GVSocialServiceType</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:dispose"><apiName>dispose</apiName><shortdesc> Dispose of Context </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Dispose of Context </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:facebookGraphRequest"><apiName>facebookGraphRequest</apiName><shortdesc>
	 Post a raw request to the Facebook Graph API.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if httpMethod is not one GVHttpMethod.GET, GVHttpMethod.POST, or GVHttpMethod.DELETE
	 </apiDesc><apiItemName>ArgumentError</apiItemName><apiOperationClassifier>ArgumentError</apiOperationClassifier></apiException><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>graphPath</apiItemName><apiType value="String"/><apiDesc>The graph path command you wish to execute, such as "me/friends" to get user's friends.  See the Facebook developer documentation for more details.
	 </apiDesc></apiParam><apiParam><apiItemName>httpMethod</apiItemName><apiType value="String"/><apiData>GET</apiData><apiDesc>Optional.  Default value is GVHttpMethod.GET. The httpMethod to use for the request, either GVHttpMethod.GET, GVHttpMethod.POST, or GVHttpMethod.DELETE.  Refer to the Facebook developer documentation for details on the appropriate method.
	 </apiDesc></apiParam><apiParam><apiItemName>params</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  An Object with string keys and values, for each additional parameter you want to send with the Graph request.  See the Facebook developer documentation for more details.
	 </apiDesc></apiParam><apiParam><apiItemName>publishPermissions</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  A comma-separated list of any PUBLISH permissions required for the request. 
	 </apiDesc></apiParam><apiParam><apiItemName>forceDeprecationUnsupported</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
	 Post a raw request to the Facebook Graph API.  Results are returned as JSON.  This gives you native access to the entire Facebook platform.  Refer to the Facebook developer documentation for details on the many accessible API methods.
	 
	 Facebook now requires that any 'PUBLISH' permissions are requested separately from initial sign on.  If the graph request requires any PUBLISH permissions, include them in the publishPermissions parameter.  If the user has not yet accepted the permissions, they will be prompted to do so before the request is processed.
	 
	 After the request, a GVFacebookEvent will be dispatched with the result- GVFacebookEvent.FB_REQUEST_RESPONSE will be dispatched if the request succeeds, and the string value of its property 'jsonData' will contain the raw JSON response.  The property 'data' will contain an Object of the parsed JSON for convenience.
	 
	 If the request fails, a GVFacebookEvent.FB_REQUEST_FAILED event will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/reference/api"><linktext>http://developers.facebook.com/docs/reference/api</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:facebookPostPhoto"><apiName>facebookPostPhoto</apiName><shortdesc>
	 Posts a photo to Facebook.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>The message to include with this photo posting. 
	 </apiDesc></apiParam><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>BitmapData image to post as a photo.
	 </apiDesc></apiParam><apiParam><apiItemName>graphPath</apiItemName><apiType value="String"/><apiData>me/photos</apiData><apiDesc>Optional.  The Graph Path to post to - defaults to <codeph>me/photos</codeph>
	 </apiDesc></apiParam><apiParam><apiItemName>forceDeprecationUnsupported</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
	 Posts a photo to Facebook.  If the user has not yet accepted a photo upload-enabling permission, they will prompted to do so before the request is processed.
	 
	 This method wraps around facebookGraphRequest- a GVFacebookEvent.FB_REQUEST_RESPONSE or GVFacebookEvent.FB_REQUEST_FAILED event will be dispatched upon it's completion.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:getDeclinedFacebookPermissions"><apiName>getDeclinedFacebookPermissions</apiName><shortdesc>
	 After a call to authenticate with Facebook, the user may have declined some or all of the permissions you requested.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>a Vector Array of permissions the user declined for this session
	 </apiDesc><apiType value="Vector$String"/></apiReturn></apiOperationDef><apiDesc>
	 After a call to authenticate with Facebook, the user may have declined some or all of the permissions you requested.  Use this method to identify which permissions, if any, were denied.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:getFbAccessExpiry"><apiName>getFbAccessExpiry</apiName><shortdesc>
	 Get the expiry time of the current Facebook Access token, in ms.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the expiry time of the current Facebook Access token, in ms.
	 </apiDesc><apiType value="Number"/></apiReturn></apiOperationDef><apiDesc>
	 Get the expiry time of the current Facebook Access token, in ms.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:getFbAccessToken"><apiName>getFbAccessToken</apiName><shortdesc>
	 Get the current Facebook access token.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the access token for the current user, if logged in and available.
	 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
	 Get the current Facebook access token.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:initFacebook"><apiName>initFacebook</apiName><shortdesc>
	 Initialize the Facebook native interface.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>appId</apiItemName><apiType value="String"/><apiDesc>The Facebook App ID- created in the Facebook developer site
	 </apiDesc></apiParam><apiParam><apiItemName>urlSchemeSuffix</apiItemName><apiType value="String"/><apiData/><apiDesc>Optional.  url scheme suffixes can be defined in the Facebook developer site, and used to share Single Sign On across multiple SKUs of one app (for instance, free and paid versions.)  See Facebook's developer documentation for more information.
	 </apiDesc></apiParam><apiParam><apiItemName>forceDeprecationUnsupported</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
	 Initialize the Facebook native interface.  You must call this before any other Facebook functions will be active.  You should execute this function as early on in your program as possible, even if you don't need to call the Facebook methods until a later time.
	 
	 As of April 2013, Facebook does not support iOS devices running a version below 5.1.  You should check GoViral.goViral.isFacebookSupported() before initializing to ensure all Facebook functions will run on the target device.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/mobile/ios/build/"><linktext>http://developers.facebook.com/docs/mobile/ios/build/</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isEmailAvailable"><apiName>isEmailAvailable</apiName><shortdesc>
	 Checks if the showEmailComposer() or showEmailComposerWithBitmap() methods are available on this device.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if mail is available
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks if the showEmailComposer() or showEmailComposerWithBitmap() methods are available on this device.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isFacebookAuthenticated"><apiName>isFacebookAuthenticated</apiName><shortdesc>
	 Check if the user is logged in to Facebook Single Sign On for this app.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the current user for this app is authenticated with Facebook.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Check if the user is logged in to Facebook Single Sign On for this app.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isFacebookGraphDialogAvailable"><apiName>isFacebookGraphDialogAvailable</apiName><shortdesc>
	 Checks whether the native Facebook Open Graph Action Dialog is available.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the native Facebook Open Graph Action Dialog is available
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks whether the native Facebook Open Graph Action Dialog is available.  Availability is dependent on the user having a current version of the Facebook application installed on their device.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isFacebookMessageDialogAvailable"><apiName>isFacebookMessageDialogAvailable</apiName><shortdesc>
	 Checks whether the native Facebook Messenger Dialog is available.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the native Facebook Messenger Dialog is available
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks whether the native Facebook Messenger Dialog is available.  Availability is dependent on the user having a current version of the Facebook Messenger application installed on their device.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isFacebookPermissionGranted"><apiName>isFacebookPermissionGranted</apiName><shortdesc>
	 After a call to authenticate with Facebook, the user may have declined some or all of the permissions you requested.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the given permission was granted
	 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>permission</apiItemName><apiType value="String"/><apiDesc>the permission to check
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 After a call to authenticate with Facebook, the user may have declined some or all of the permissions you requested.  Use this method to identify if a particular permission was granted.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isFacebookShareDialogAvailable"><apiName>isFacebookShareDialogAvailable</apiName><shortdesc>
	 Checks whether the native Facebook Share Dialog is available.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the native Facebook Share Dialog is available
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks whether the native Facebook Share Dialog is available.  Availability is dependent on the user having a current version of the Facebook application installed on their device.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isFacebookSupported"><apiName>isFacebookSupported</apiName><shortdesc>
	 As of April 2013, Facebook is no longer supporting iOS devices running a version below 5.1.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if Facebook is fully supported on the device
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 As of April 2013, Facebook is no longer supporting iOS devices running a version below 5.1.  You can use this method to determine if the current device will support all Facebook functionality.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isGenericShareAvailable"><apiName>isGenericShareAvailable</apiName><shortdesc>
	 Check if the current platform supports generic message sharing.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if generic messages can be shared
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Check if the current platform supports generic message sharing.  You should check this before calling shareGenericMessage() or shareGenericMessageWithImage().
	 
	 On Android, this returns true, and generic share functions will query the installed apps on the Android device for any that will accept the request.  On iOS 6, generic share functions will use the built-in sharing features of the iOS (mail, SMS, Facebook, Twitter, etc.)  On iOS 5 or earlier, these functions are not available and isGenericShareAvailable() returns false.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isSocialServiceAvailable"><apiName>isSocialServiceAvailable</apiName><shortdesc>
	 Checks if a given social service is available for use.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the service is available; false if otherwise.
	 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>serviceType</apiItemName><apiType value="String"/><apiDesc>the service to check - one of GVSocialServiceType.FACEBOOK, GVSocialServiceType.TWITTER, GVSocialServiceType.SMS, or GVSocialServiceType.SINAWEIBO
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Checks if a given social service is available for use.  Check this before calling displaySocialComposerView().
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.xml#GVSocialServiceType"><linktext>com.milkmangames.nativeextensions.GVSocialServiceType</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isSupported"><apiName>isSupported</apiName><shortdesc>
	 Checks if the current platform supports GoViral.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>true if GoViral is supported; false otherwise.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks if the current platform supports GoViral.  Note that this only determines whether the app is running under an environment supported by the extension (iOS for the iOS version, Android for the Android version, or either one for the extension that supports both.)
	 
	 Use this call before initializing GoViral in order to confirm that you are on a supported device.  (So that you can avoid initializing GoViral on an unsupported platform, such as Windows, when building a multi-platform app.)
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:isTweetSheetAvailable"><apiName>isTweetSheetAvailable</apiName><shortdesc>
	 Determine whether iOS Native Twitter features are available, which requires the current device is running iOS 5 or greater; or, for Android supported versions of the extension, determine if a Twitter client is installed on the current device.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if iOS 5 Native Twitter features are available (such as GoViral.goViral.showTweetSheet() or GoViral.goViral.showTweetSheetWithImage()); or for Android supported versions of the extension, true if a Twitter client is installed on the device.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Determine whether iOS Native Twitter features are available, which requires the current device is running iOS 5 or greater; or, for Android supported versions of the extension, determine if a Twitter client is installed on the current device. 
	 
	 If it returns false, the device can send Twitter messages with status messages, but may not be able to attach an image.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:logFacebookAppEvent"><apiName>logFacebookAppEvent</apiName><shortdesc>
	 Log a Facebook AppEvent (used for analytics and Facebook ad campaign tracking)
	 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>appEvent</apiItemName><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookAppEvent</apiOperationClassifier><apiDesc>the event to track
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Log a Facebook AppEvent (used for analytics and Facebook ad campaign tracking)
	 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="https.//developers.facebook.com/docs/ios/app-events.xml"><linktext>https://developers.facebook.com/docs/ios/app-events</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:logoutFacebook"><apiName>logoutFacebook</apiName><shortdesc> Log the current user out of Facebook Single Sign On.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Log the current user out of Facebook Single Sign On. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:postFacebookAchievement"><apiName>postFacebookAchievement</apiName><shortdesc>
	 Post a Facebook Game Achievement.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>achievementURL</apiItemName><apiType value="String"/><apiDesc>the score to post to the Facebook leaderboard
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Post a Facebook Game Achievement.  You must be authenticated with Facebook first, and your app must be defined as a game on developer.facebook.com.  The achievement definition xml needs to be posted to a publish website first as per Facebook's specifications.  See the Facebook documentation for additional information.
	 
	 If this is the first time posting a score or achievement and the user has not yet granted publish permissions, the extension will automatically request the permissions from the user.
	 
	 When the operation completes successfully, GVFacebookEvent.FB_REQUEST_RESPONSE will be dispatched, with a graphPath of 'me/achievements'.  If it fails, GVFacebookEvent.FB_REQUEST_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="" invalidHref="https.//developers.facebook.com/docs/games/achievements.xml"><linktext>https://developers.facebook.com/docs/games/achievements</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:postFacebookHighScore"><apiName>postFacebookHighScore</apiName><shortdesc>
	 Post a high score to the Facebook Leaderboard for this game.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>score</apiItemName><apiType value="Number"/><apiDesc>the score to post to the Facebook leaderboard
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Post a high score to the Facebook Leaderboard for this game.  You must be authenticated with Facebook first, and your app must be defined as a game on developer.facebook.com.  Facebook will automatically handle updating the feed with the high score story, including showing whether a friend has been bested, etc.
	 
	 If this is the first time posting a score and the user has not yet granted publish permissions, the extension will automatically request the permissions from the user.
	 
	 When the operation completes successfully, GVFacebookEvent.FB_REQUEST_RESPONSE will be dispatched, with a graphPath of 'me/scores'.  If it fails, GVFacebookEvent.FB_REQUEST_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:presentFacebookPageOrProfile"><apiName>presentFacebookPageOrProfile</apiName><shortdesc>
	 Displays the Facebook Page with the given ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pageID</apiItemName><apiType value="String"/><apiDesc>the numeric page or profile ID for which to present this view
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays the Facebook Page with the given ID.  This is the an effective method to call for a 'Like us on Facebook' button, as it will present the relevant page and the user can complete the action by pressing Like.
	 
	 If the Facebook Application is installed, the page will be shown in the Facebook viewer.  If it's not, the extension will fallback to using the browser.
	 
	 To find the Page ID, visit your Facebook Page in the browser; the ID is the long number typically at the end of the URL.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:presentTwitterProfile"><apiName>presentTwitterProfile</apiName><shortdesc>
	 Displays the Twitter profile for the twitter user with the given Twitter ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>twitterID</apiItemName><apiType value="String"/><apiDesc>the Twitter user handle for which to display the profile
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays the Twitter profile for the twitter user with the given Twitter ID.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:publishInstall"><apiName>publishInstall</apiName><shortdesc>
	 DEPRECATED.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 DEPRECATED.  Mobile ad install publishing is now handled automatically by the extension.
	 Publish a mobile install (for facebook mobile ads.)
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:refreshFacebookSessionPermissions"><apiName>refreshFacebookSessionPermissions</apiName><shortdesc>
	 Forces the permissions stored in your Facebook session to updated from the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Forces the permissions stored in your Facebook session to updated from the server.  If the request is successful, GVFacebookEvent.FB_PERMISSIONS_REFRESHED will be dispatched; otherwise, a GVFacebookEvent.FB_PERMISSIONS_REFRESH_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/reference/api/permissions/"><linktext>http://developers.facebook.com/docs/reference/api/permissions/</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:requestFacebookFriends"><apiName>requestFacebookFriends</apiName><shortdesc>
	 Convenience method to request the user's Facebook friends.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>extraParams</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  Any extra parameters to append to the friend request.  For instance, if you pass {fields:"installed"} the returned GVFacebookFriend objects will have an indicator of whether the friend has your app installed in its 'properties' field.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method to request the user's Facebook friends.  After the request, a GVFacebookEvent will be dispatched.  If the request is successful, GVFacebookEvent.FB_REQUEST_RESPONSE event will be dispatched, and its 'friends' property will contain a vector array of GVFacebookFriend objects. If the call fails, GVFacebookEvent.FB_REQUEST_FAILED will be dispatched.
	 
	 NOTE: Facebook's policy has changed such that any app published after April 30, 2014, will only be allowed to see the IDs of friends who have already installed the app when using this method.  Facebook suggests replacing functionality that previously relied on this requeset with the taggable_friends API, which requires Facebook's approval before use.  For more information see https://developers.facebook.com/docs/graph-api/reference/v2.0/user/taggable_friends .
		 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.xml#GVFacebookFriend"><linktext>com.milkmangames.nativeextensions.GVFacebookFriend</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="" invalidHref="https.//developers.facebook.com/docs/graph-api/reference/v2.0/user/taggable_friends.xml"><linktext>https://developers.facebook.com/docs/graph-api/reference/v2.0/user/taggable_friends</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:requestFacebookMobileAdID"><apiName>requestFacebookMobileAdID</apiName><shortdesc>
	 Request a Facebook Custom Audience App User Ad ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
	 Request a Facebook Custom Audience App User Ad ID.  Used for tracking audiences with Facebook ads.  See Facebook's documentation for additional information.
	 
	 If the request completes successfully, GVFacebookEvent.FB_AD_ID_RESPONSE will be dispatched, and its facebookMobileAdId property will contain the ad id if it was successfully retrieved, or null if it was not.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="" invalidHref="https.//developers.facebook.com/docs/ads-for-apps/custom-audiences-for-mobile-apps/.xml"><linktext>https://developers.facebook.com/docs/ads-for-apps/custom-audiences-for-mobile-apps/</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:requestMyFacebookProfile"><apiName>requestMyFacebookProfile</apiName><shortdesc>
	 Convenience method to request the user's Facebook profile.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
	 Convenience method to request the user's Facebook profile.  After the request, a GVFacebookEvent will be dispatched.  If the request is successful, GVFacebookEvent.FB_REQUEST_RESPONSE event will be dispatched, and its 'friends' property will contain a vector array with one GVFacebookFriend object for the logged in user. If the call fails, GVFacebookEvent.FB_REQUEST_FAILED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.xml#GVFacebookFriend"><linktext>com.milkmangames.nativeextensions.GVFacebookFriend</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:requestNewFacebookPublishPermissions"><apiName>requestNewFacebookPublishPermissions</apiName><shortdesc>
	 You should only use this after initial authentication.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the permissions requested are empty, null, invalid, or a current session is not already in progress
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>permissions</apiItemName><apiType value="String"/><apiDesc>comma-separated list of new permissions to request.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 You should only use this after initial authentication.  Makes a request reauthorize the current user with new Facebook Publish permissions.  This should only be necessary if you need to acquire new publish permissions on the client, and pass the updated token to your own server for further use.  Otherwise, pass the appropriate permissions requirements to your client calls to facebookGraphRequest, and the update will be handled automatically.
	 
	 If the request is successful, GVFacebookEvent.FB_PUBLISH_PERMISSIONS_UPDATED will be dispatched; otherwise, a GVFacebookEvent.FB_PUBLISH_PERMISSIONS_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/reference/api/permissions/"><linktext>http://developers.facebook.com/docs/reference/api/permissions/</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:requestNewFacebookReadPermissions"><apiName>requestNewFacebookReadPermissions</apiName><shortdesc>
	 You should only use this after initial authentication.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the permissions requested are empty, null, invalid, or a current session is not already in progress
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>permissions</apiItemName><apiType value="String"/><apiDesc>comma-separated list of new permissions to request.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 You should only use this after initial authentication.  Makes a request reauthorize the current user with new Facebook Read permissions.  If the request is successful, GVFacebookEvent.FB_READ_PERMISSIONS_UPDATED will be dispatched; otherwise, a GVFacebookEvent.FB_READ_PERMISSIONS_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/reference/api/permissions/"><linktext>http://developers.facebook.com/docs/reference/api/permissions/</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:shareGenericMessageWithImage"><apiName>shareGenericMessageWithImage</apiName><shortdesc>
	 Shares a generic message intent, with an image attachment.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVShareDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>subject</apiItemName><apiType value="String"/><apiDesc>the subject of the message.  Not all targets will support a subject.
	 </apiDesc></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the string message to share
	 </apiDesc></apiParam><apiParam><apiItemName>isHtml</apiItemName><apiType value="Boolean"/><apiDesc>set to true if the message is formatted as html.
	 </apiDesc></apiParam><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>a bitmapData object containing an image to attach to the share intent.  Not all targets will support images.
	 </apiDesc></apiParam><apiParam><apiItemName>popoverX</apiItemName><apiType value="Number"/><apiData>1024</apiData><apiDesc>Optional.	On iOS 6 iPads, this is the X position from which to display the activity picker popup view; measured in device points- so a value of 200 would mean pixel position 400 on a retina display, and 200 on a non-retina display.
	 </apiDesc></apiParam><apiParam><apiItemName>popoverY</apiItemName><apiType value="Number"/><apiData>1024</apiData><apiDesc>Optional.  On iOS 6 iPads, this is the Y position from which to display the activity picker popup view; measured in device points- so a value of 200 would mean pixel position 400 on a retina display, and 200 on a non-retina display.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shares a generic message intent, with an image attachment. You should check isGenericShareAvailable() first before calling shareGenericMessage().
	 
	 On Android, the user will be presented with a dialog form which to choose an installed application that can accept the message, using Android's Intent scheme feature.
	 On iOS 6, the user will be presented with the built-in sharing options dialog (sms, mail, Facebook, Twitter, etc.)  On iOS 5 and earlier, this function is not available.
	 
	 After the share intent is completed, GVShareEvent.GENERIC_MESSAGE_SHARED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVShareEvent"><linktext>com.milkmangames.nativeextensions.events.GVShareEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:shareGenericMessage"><apiName>shareGenericMessage</apiName><shortdesc>
	 Shares a generic message intent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVShareDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>subject</apiItemName><apiType value="String"/><apiDesc>the subject of the message.  Not all targets will support a subject.
	 </apiDesc></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the string message to share
	 </apiDesc></apiParam><apiParam><apiItemName>isHtml</apiItemName><apiType value="Boolean"/><apiDesc>set to true if the message is formatted as html.
	 </apiDesc></apiParam><apiParam><apiItemName>popoverX</apiItemName><apiType value="Number"/><apiData>1024</apiData><apiDesc>Optional.	On iOS 6 iPads, this is the X position from which to display the activity picker popup view; measured in device points- so a value of 200 would mean pixel position 400 on a retina display, and 200 on a non-retina display.
	 </apiDesc></apiParam><apiParam><apiItemName>popoverY</apiItemName><apiType value="Number"/><apiData>1024</apiData><apiDesc>Optional.  On iOS 6 iPads, this is the Y position from which to display the activity picker popup view; measured in device points- so a value of 200 would mean pixel position 400 on a retina display, and 200 on a non-retina display.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shares a generic message intent.  You should check isGenericShareAvailable() first before calling shareGenericMessage().
	 
	 On Android, the user will be presented with a dialog form which to choose an installed application that can accept the message, using Android's Intent scheme feature.
	 On iOS 6, the user will be presented with the built-in sharing options dialog (sms, mail, Facebook, Twitter, etc.)  On iOS 5 and earlier, this function is not available.
	 
	 After the share intent is completed, GVShareEvent.GENERIC_MESSAGE_SHARED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVShareEvent"><linktext>com.milkmangames.nativeextensions.events.GVShareEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showEmailComposerWithBitmap"><apiName>showEmailComposerWithBitmap</apiName><shortdesc>
	 Show a native iOS or Android Email Composer dialog, with an attached image as BitmapData.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVMailDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>subject</apiItemName><apiType value="String"/><apiDesc>subject line of the email
	 </apiDesc></apiParam><apiParam><apiItemName>toWhom</apiItemName><apiType value="String"/><apiDesc>'to' line of the email.  Comma separated list is accepted.
	 </apiDesc></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiDesc>the body of the email
	 </apiDesc></apiParam><apiParam><apiItemName>isBodyHtml</apiItemName><apiType value="Boolean"/><apiDesc>set to 'true' if you wish for the email to be html formatted.
	 </apiDesc></apiParam><apiParam><apiItemName>bitmapData</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>the bitmapData of the image to attach to the email.
	 </apiDesc></apiParam><apiParam><apiItemName>imageFileName</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
	 Show a native iOS or Android Email Composer dialog, with an attached image as BitmapData.
	 
	 On dismissal, a GVMailEvent will be dispatched indicating the result, with a type of GVMailEvent.MAIL_SAVED if the user saved but did not send the message, GVMailEvent.MAIL_SENT if the user sent the message, GVMailEvent.MAIL_CANCELED if the user cancelled the dialog, or GVMailEvent.MAIL_FAILED if an error occurred sending.	 
	 
	 Due to the design of inter process messaging on Android, a GVMailEvent.MAIL_SENT event may be sent on Android, even if the message was dismissed or canceled.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVMailEvent"><linktext>com.milkmangames.nativeextensions.events.GVMailEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showEmailComposerWithByteArray"><apiName>showEmailComposerWithByteArray</apiName><shortdesc>
	 Show a native iOS or Android Email Composer dialog, with an attached file as a ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVMailDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>subject</apiItemName><apiType value="String"/><apiDesc>subject line of the email
	 </apiDesc></apiParam><apiParam><apiItemName>toWhom</apiItemName><apiType value="String"/><apiDesc>'to' line of the email.  Comma separated list is accepted.
	 </apiDesc></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiDesc>the body of the email
	 </apiDesc></apiParam><apiParam><apiItemName>isBodyHtml</apiItemName><apiType value="Boolean"/><apiDesc>set to 'true' if you wish for the email to be html formatted.
	 </apiDesc></apiParam><apiParam><apiItemName>byteArray</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>the ByteArray of the data to attach to the email.
	 </apiDesc></apiParam><apiParam><apiItemName>mimeType</apiItemName><apiType value="String"/><apiDesc>the MimeType for the attachment.
	 </apiDesc></apiParam><apiParam><apiItemName>fileName</apiItemName><apiType value="String"/><apiDesc>the fileName, with extension, for the attachment
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Show a native iOS or Android Email Composer dialog, with an attached file as a ByteArray.
	 
	 On dismissal, a GVMailEvent will be dispatched indicating the result, with a type of GVMailEvent.MAIL_SAVED if the user saved but did not send the message, GVMailEvent.MAIL_SENT if the user sent the message, GVMailEvent.MAIL_CANCELED if the user cancelled the dialog, or GVMailEvent.MAIL_FAILED if an error occurred sending.	 
	 
	 Due to the design of inter process messaging on Android, a GVMailEvent.MAIL_SENT event may be sent on Android, even if the message was dismissed or canceled.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVMailEvent"><linktext>com.milkmangames.nativeextensions.events.GVMailEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showEmailComposer"><apiName>showEmailComposer</apiName><shortdesc>
	 Show a native iOS or Android Email Composer dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVMailDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>subject</apiItemName><apiType value="String"/><apiDesc>subject line of the email
	 </apiDesc></apiParam><apiParam><apiItemName>toWhom</apiItemName><apiType value="String"/><apiDesc>'to' line of the email.  Comma separated list is accepted.
	 </apiDesc></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiDesc>the body of the email
	 </apiDesc></apiParam><apiParam><apiItemName>isBodyHtml</apiItemName><apiType value="Boolean"/><apiDesc>set to 'true' if you wish for the email to be html formatted.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Show a native iOS or Android Email Composer dialog.
	 
	 On dismissal, a GVMailEvent will be dispatched indicating the result, with a type of GVMailEvent.MAIL_SAVED if the user saved but did not send the message, GVMailEvent.MAIL_SENT if the user sent the message, GVMailEvent.MAIL_CANCELED if the user cancelled the dialog, or GVMailEvent.MAIL_FAILED if an error occurred sending.	 
	 
	 Due to the design of inter process messaging on Android, a GVMailEvent.MAIL_SENT event may be sent on Android, even if the message was dismissed or canceled.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVMailEvent"><linktext>com.milkmangames.nativeextensions.events.GVMailEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showFacebookFeedDialog"><apiName>showFacebookFeedDialog</apiName><shortdesc>
	 Displays a native Facebook Wall Post / Feed Post Dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>the name of the post
	 </apiDesc></apiParam><apiParam><apiItemName>caption</apiItemName><apiType value="String"/><apiDesc>caption for the post
	 </apiDesc></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the message body of the post
	 </apiDesc></apiParam><apiParam><apiItemName>description</apiItemName><apiType value="String"/><apiDesc>description of the post
	 </apiDesc></apiParam><apiParam><apiItemName>linkUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Link URL for post to point at
	 </apiDesc></apiParam><apiParam><apiItemName>imageUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Image URL for post to display
	 </apiDesc></apiParam><apiParam><apiItemName>extraParams</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  Key/value pairs of any additional parameters to pass up to Facebook.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays a native Facebook Wall Post / Feed Post Dialog.
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="http://developers.facebook.com/docs/reference/dialogs/feed/"><linktext>http://developers.facebook.com/docs/reference/dialogs/feed/</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showFacebookGraphDialog"><apiName>showFacebookGraphDialog</apiName><shortdesc>
	 Displays a native Facebook Open Graph Action Dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>actionType</apiItemName><apiType value="String"/><apiDesc>the Open Graph Action Type
	 </apiDesc></apiParam><apiParam><apiItemName>objectType</apiItemName><apiType value="String"/><apiDesc>the Open Graph Object Type
	 </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiType value="String"/><apiDesc>the Title of the Open Graph Object
	 </apiDesc></apiParam><apiParam><apiItemName>description</apiItemName><apiType value="String"/><apiDesc>the Description of the Open Graph Object
	 </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>the URL associated with the Open Graph Object
	 </apiDesc></apiParam><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiData>null</apiData><apiDesc>Optional.  BitmapData image to attach to the post
	 </apiDesc></apiParam><apiParam><apiItemName>extraObjectParams</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  Additional key value string pairs to apply to the Open Graph Object
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays a native Facebook Open Graph Action Dialog.
	 
	 Availability of this feature depends on the version of the Facebook application the user has installed on their device.  You can check <codeph>isFacebookGraphDialogAvailable()</codeph> to see if the native Open Graph Action dialog can be displayed.  If you call <codeph>showFacebookGraphDialog()</codeph> and the user's device does not support it, nothing will be displayed.
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="" invalidHref="https.//developers.facebook.com/docs/sharing.xml"><linktext>https://developers.facebook.com/docs/sharing</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showFacebookMessageDialog"><apiName>showFacebookMessageDialog</apiName><shortdesc>
	 Displays a native Facebook Messenger Dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>Sets the title of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>caption</apiItemName><apiType value="String"/><apiDesc>Sets the subtitle of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>description</apiItemName><apiType value="String"/><apiDesc>Sets the description of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>linkUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.	Sets the URL of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>imageUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional. Sets the URL of the image of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>extraParams</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  Extra parameters to apply the dialog, as String key value pairs.  
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays a native Facebook Messenger Dialog.
	 
	 Availability of this feature depends on the user having Facebook Messenger installed on the device.  You can check <codeph>isFacebookMessageDialogAvailable()</codeph> to see if the native messenger dialog can be displayed.  
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="" invalidHref="https.//developers.facebook.com/docs/sharing.xml"><linktext>https://developers.facebook.com/docs/sharing</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showFacebookRequestDialog"><apiName>showFacebookRequestDialog</apiName><shortdesc>
	 Show a native Facebook request dialog (e.g., invite friends.)
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>filters is not one of  GVFacebookRequestFilter.APP_USERS, or GVFacebookRequestFilter.APP_NON_USERS.
	 </apiDesc><apiItemName>ArgumentError	if</apiItemName><apiOperationClassifier>ArgumentError	if</apiOperationClassifier></apiException><apiException><apiDesc>actionType is not one of GVFacebookRequestActionType.ASK_FOR, GVFacebookRequestActionType.SEND, or GVFacebookRequestActionType.TURN
	 </apiDesc><apiItemName>ArgumentError	if</apiItemName><apiOperationClassifier>ArgumentError	if</apiOperationClassifier></apiException><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>The message to include with the request.  Max length of 255 characters- this will be truncated if it's more than that.
	 </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Title to show on the request.  Max length of 50 characters- this will be truncated if it's more than that.
	 </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Extra data string for the request.  Max length of 255 characters- this will be truncated if it's more than that.
	 </apiDesc></apiParam><apiParam><apiItemName>filters</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.	DEPRECATED.  Facebook may ignore this parameter on mobile SDKs.  As an alternative, load the user's friends with a facebookGraphRequest, and post the necessary IDs to the excludeIds or to parameters. Allows filtering of recipients to GVFacebookRequestFilter.APP_USERS, or GVFacebookRequestFilter.APP_NON_USERS.
	 </apiDesc></apiParam><apiParam><apiItemName>to</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional. A String facebook ID for the request to go to, or a comma delimited list of such IDs.  If this is not set, a standard friend selector will appear.
	 </apiDesc></apiParam><apiParam><apiItemName>excludeIds</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.	A comma delimited list of Facebook User IDs to exclude from the dialog picker.
	 </apiDesc></apiParam><apiParam><apiItemName>frictionless</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Optional.  Set to 'true' to make this a frictionless request.  See Facebook developer documentation for more information.
	 </apiDesc></apiParam><apiParam><apiItemName>actionType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Used when defining additional context about the nature of the request.  One of GVFacebookRequestActionType.ASK_FOR, GVFacebookRequestActionType.SEND, or GVFacebookRequestActionType.TURN.
	 </apiDesc></apiParam><apiParam><apiItemName>objectID</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  The Open Graph Object ID of the object being send via the actionType parameter.
	 </apiDesc></apiParam><apiParam><apiItemName>suggestions</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  A comma delimited list of user IDs that will be included in the dialog as the first suggested friends. Note: This parameter is can not be used together with filters. Using the two in the same dialog will result with an error.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Show a native Facebook request dialog (e.g., invite friends.)
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="http://developers.facebook.com/docs/reference/dialogs/requests/"><linktext>http://developers.facebook.com/docs/reference/dialogs/requests/</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showFacebookShareDialog"><apiName>showFacebookShareDialog</apiName><shortdesc>
	 Displays a native Facebook Share Dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>Sets the title of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>caption</apiItemName><apiType value="String"/><apiDesc>Sets the subtitle of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>description</apiItemName><apiType value="String"/><apiDesc>Sets the description of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>linkUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.	Sets the URL of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>imageUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional. Sets the URL of the image of the item to be shared.
	 </apiDesc></apiParam><apiParam><apiItemName>extraParams</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  Extra parameters to apply the dialog, as String key value pairs.  Supported parameter key are <codeph>ref, place,</codeph> or <codeph>friends.</codeph>
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays a native Facebook Share Dialog.
	 
	 The Native Share Dialog is preferable to the Feed Dialog for a number of reasons: it's a native UI in the Facebook app, it can be used even if the user has not logged in and authenticated your application, and it supports additional parameters.
	 
	 Availability of this feature depends on the version of the Facebook application the user has installed on their device.  You can check <codeph>isFacebookShareDialogAvailable()</codeph> to see if the native share dialog can be displayed.  If you call <codeph>showFacebookShareDialog()</codeph> and the user's device does not support it, the extension will fallback to the classic Feed Dialog, omitting any unsupported features requested.
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link><link href="" invalidHref="https.//developers.facebook.com/docs/sharing.xml"><linktext>https://developers.facebook.com/docs/sharing</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showTweetSheetWithImage"><apiName>showTweetSheetWithImage</apiName><shortdesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature, with an attached image; or for Android versions of the extension, a Tweet using an installed Twitter client on the device.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVTwitterDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>BitmapData image to attach to the Tweet.
	 </apiDesc></apiParam><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>the message to prepulate into the twitter post dialog.  The user will be able to change this if they wish.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature, with an attached image; or for Android versions of the extension, a Tweet using an installed Twitter client on the device.
	 
	 This method is available for devices running iOS 5.0 or greater, or for Android versions of the extension, devices which have a Twitter client installed.
	 
	 You may use isTweetSheetAvailable() to determine availability on the current device.
	 
	 After the dialog is dismissed, a GVTwitterEvent.TW_DIALOG_FINISHED, GVTwitterEvent.TW_DIALOG_CANCELED, or GVTwitterEvent.TW_DIALOG_CANCELED event will be dispatched.
	 
	 Due to the design of interprocess messaging on Android, GVTwitterEvent.TW_DIALOG_FINISHED may be dispatched even if the Tweet is canceled by the user with the Android version of the extension.
	 
	 For Android supported versions of the extension, note that some Twitter clients on Android from some manufacturers are not capable of sending an image attachment and a status message in the same Tweet from a third party application.  In these cases, the tweet may be displayed with an image but a defualt message.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVTwitterEvent"><linktext>com.milkmangames.nativeextensions.events.GVTwitterEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:showTweetSheet"><apiName>showTweetSheet</apiName><shortdesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature, or for the Android version of the extension, a Tweet with a currently installed Twitter Client.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVTwitterDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the message to prepulate into the twitter post dialog.  The user will be able to change this if they wish.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature, or for the Android version of the extension, a Tweet with a currently installed Twitter Client.  
	 
	 This method is available for devices running iOS 5.0 or greater, or for the Android version of the extension, devices with a Twitter client installed.  You may use isTweetSheetAvailable() to determine availability on the current device.
	 
	 After the dialog is dismissed, a GVTwitterEvent.TW_DIALOG_FINISHED, GVTwitterEvent.TW_DIALOG_CANCELED, or GVTwitterEvent.TW_DIALOG_CANCELED event will be dispatched.
	 
	 Due to the design of interprocess messaging on Android, GVTwitterEvent.TW_DIALOG_FINISHED may be dispatched even if the Tweet is canceled by the user with the Android version of the extension.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVTwitterEvent"><linktext>com.milkmangames.nativeextensions.events.GVTwitterEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GoViral:stageFacebookImage"><apiName>stageFacebookImage</apiName><shortdesc>
	 Uploads an image to the Facebook staging server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>dispatcher that can dispatch inline listeners for this request
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>the bitmapData object to upload
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Uploads an image to the Facebook staging server.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions:GoViral:VERSION"><apiName>VERSION</apiName><shortdesc>
	 Current API Version
	 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4.7.0</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Current API Version
	 </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GoViral:goViral:get"><apiName>goViral</apiName><shortdesc>
	 The current instance of the GoViral singelton.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.milkmangames.nativeextensions:GoViral</apiValueClassifier><apiException><apiDesc>if GoViral.create() was not called before first accessing this property.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException></apiValueDef><apiDesc>
	 The current instance of the GoViral singelton.  You must call GoViral.create() before this property is available.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVDispatcher"><apiName>GVDispatcher</apiName><shortdesc> GVDispatcher </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GVDispatcher </apiDesc></apiClassifierDetail><apiOperation id="com.milkmangames.nativeextensions:GVDispatcher:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
	 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc>
	 </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="com.milkmangames.nativeextensions:GVDispatcher:protected:eventIDs"><apiName>eventIDs</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Vector$String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVDispatcher:protected:listener"><apiName>listener</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Function"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVFacebookRequestFilter"><apiName>GVFacebookRequestFilter</apiName><shortdesc> GoViral Facebook Request Filter </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GoViral Facebook Request Filter </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions:GVFacebookRequestFilter:APP_NON_USERS"><apiName>APP_NON_USERS</apiName><shortdesc> Only non-users of the App will be allowed by filter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>app_non_users</apiData><apiType value="String"/></apiValueDef><apiDesc> Only non-users of the App will be allowed by filter. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookRequestFilter:APP_USERS"><apiName>APP_USERS</apiName><shortdesc> Only Users of the App will be allowed by filter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>app_users</apiData><apiType value="String"/></apiValueDef><apiDesc> Only Users of the App will be allowed by filter. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVFacebookDispatcher"><apiName>GVFacebookDispatcher</apiName><shortdesc> GVFacebookDispatcher </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.milkmangames.nativeextensions:GVDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GVFacebookDispatcher </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:GVFacebookDispatcher_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_AD_ID_RESPONSE"><apiName>FB_AD_ID_RESPONSE</apiName><shortdesc> Facebook Mobile App Ad ID Response </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Facebook Mobile App Ad ID Response </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVFacebookDispatcher_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_REQUEST_FAILED"><apiName>FB_REQUEST_FAILED</apiName><shortdesc> Dispatched when a Facebook  Graph Request has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook  Graph Request has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVFacebookDispatcher_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_REQUEST_RESPONSE"><apiName>FB_REQUEST_RESPONSE</apiName><shortdesc> Dispatched when a Facebook Graph Request returns a response </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Graph Request returns a response </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVFacebookDispatcher_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_DIALOG_FAILED"><apiName>FB_DIALOG_FAILED</apiName><shortdesc> Dispatched when a Facebook Dialog has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Dialog has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVFacebookDispatcher_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_DIALOG_CANCELED"><apiName>FB_DIALOG_CANCELED</apiName><shortdesc> Dispatched when a Facebook Dialog is cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Dialog is cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVFacebookDispatcher_com.milkmangames.nativeextensions.events.GVFacebookEvent_FB_DIALOG_FINISHED"><apiName>FB_DIALOG_FINISHED</apiName><shortdesc> Dispatched When a Facebook Dialog has finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When a Facebook Dialog has finished </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions:GVFacebookDispatcher:addAdIdListener"><apiName>addAdIdListener</apiName><shortdesc>
	 Convenience method that adds an event listener for when an async request for the Facebook Ad ID is completed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>instance of GVFacebookDispatcher
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>the event listener function, should take GVFacebookEvent as a parameter
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method that adds an event listener for when an async request for the Facebook Ad ID is completed.  This listener will be a weak reference and automatically removed after dispatch.  For backwards compatibility, <codeph>GoViral.goViral</codeph> will also dispatch the related event.
	 
	 The listener parameter should take the form of <codeph>function(e:GVFacebookEvent) {}</codeph>.  You may check the value of <codeph>e.facebookMobileAdId</codeph> which will be the value of Facebook Ad ID if the request completed successfully, or null if it did not.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GVFacebookDispatcher:addDialogListener"><apiName>addDialogListener</apiName><shortdesc>
	 Convenience method that adds an event listener for when a Facebook dialog request is completed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>instance of GVFacebookDispatcher
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>the event listener function, should take GVFacebookEvent as a parameter
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method that adds an event listener for when a Facebook dialog request is completed.  This listener will be a weak reference and automatically removed after dispatch.  For backwards compatibility, <codeph>GoViral.goViral</codeph> will also dispatch the related event.
	 
	 The listener parameter should take the form of <codeph>function(e:GVFacebookEvent) {}</codeph>.  You may check the value of <codeph>e.type</codeph> which will be either <codeph>GVFacebookEvent.FB_DIALOG_FINISHED</codeph> if the dialog completed successfully, <codeph>GVFacebookEvent.FB_DIALOG_CANCELED</codeph> if the dialog was canceled, or <codeph>GVFacebookEvent.FB_DIALOG_FAILED</codeph> if the dialog was not displayed successfully.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GVFacebookDispatcher:addRequestListener"><apiName>addRequestListener</apiName><shortdesc>
	 Convenience method that adds an event listener for when an async Facebook request is completed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>instance of GVFacebookDispatcher
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVFacebookDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>the event listener function, should take GVFacebookEvent as a parameter
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method that adds an event listener for when an async Facebook request is completed.  This listener will be a weak reference and automatically removed after dispatch.  For backwards compatibility, <codeph>GoViral.goViral</codeph> will also dispatch the related event.
	 
	 The listener parameter should take the form of <codeph>function(e:GVFacebookEvent) {}</codeph>.  You may check the value of <codeph>e.type</codeph> which will be either <codeph>GVFacebookEvent.FB_REQUEST_RESPONSE</codeph> if the call completed successfully, or <codeph>GVFacebookEvent.FB_REQUEST_FAILED</codeph> if the request has failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.events.GVFacebookEvent</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVMailDispatcher"><apiName>GVMailDispatcher</apiName><shortdesc> GVMailDispatcher </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.milkmangames.nativeextensions:GVDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GVMailDispatcher </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:GVMailDispatcher_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_FAILED"><apiName>MAIL_FAILED</apiName><shortdesc> Dispatched when an email dialog fails </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when an email dialog fails </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVMailDispatcher_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_SENT"><apiName>MAIL_SENT</apiName><shortdesc> Dispatched when the user sends an email </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user sends an email </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVMailDispatcher_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_SAVED"><apiName>MAIL_SAVED</apiName><shortdesc> Dispatched when the user saves an email </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user saves an email </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVMailDispatcher_com.milkmangames.nativeextensions.events.GVMailEvent_MAIL_CANCELED"><apiName>MAIL_CANCELED</apiName><shortdesc> Dispatched when a mail dialog is cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a mail dialog is cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions:GVMailDispatcher:addDialogListener"><apiName>addDialogListener</apiName><shortdesc>
	 Convenience method that adds an event listener for when a send mail dialog request is completed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>instance of GVMailDispatcher
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVMailDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>the event listener function, should take GVFacebookEvent as a parameter
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method that adds an event listener for when a send mail dialog request is completed.  This listener will be a weak reference and automatically removed after dispatch.  For backwards compatibility, <codeph>GoViral.goViral</codeph> will also dispatch the related event.
	 
	 The listener parameter should take the form of <codeph>function(e:GVMailEvent) {}</codeph>.  You may check the value of <codeph>e.type</codeph> which will be either <codeph>GVMailEvent.MAIL_SENT</codeph> if the dialog completed successfully, <codeph>GVMailEvent.MAIL_CANCELED</codeph> if the dialog was canceled, <codeph>GVMailEvent.MAIL_SAVED</codeph> if the user saved the mail to send later, or <codeph>GVMailEvent.MAIL_FAILED</codeph> if the dialog was not displayed successfully.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVMailEvent"><linktext>com.milkmangames.nativeextensions.events.GVMailEvent</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVSocialServiceType"><apiName>GVSocialServiceType</apiName><shortdesc> Enumerates the types of Social Services supported for sharing by the extension </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Enumerates the types of Social Services supported for sharing by the extension </apiDesc></apiClassifierDetail><apiOperation id="com.milkmangames.nativeextensions:GVSocialServiceType:decode"><apiName>decode</apiName><shortdesc> Decode an internal iOS string to a GVSocialServiceType constant </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>inValue</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Decode an internal iOS string to a GVSocialServiceType constant </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions:GVSocialServiceType:FACEBOOK"><apiName>FACEBOOK</apiName><shortdesc> Facebook </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>FACEBOOK</apiData><apiType value="String"/></apiValueDef><apiDesc> Facebook </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVSocialServiceType:SINAWEIBO"><apiName>SINAWEIBO</apiName><shortdesc> SinaWeibo </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SINAWEIBO</apiData><apiType value="String"/></apiValueDef><apiDesc> SinaWeibo </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVSocialServiceType:SMS"><apiName>SMS</apiName><shortdesc> SMS </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SMS</apiData><apiType value="String"/></apiValueDef><apiDesc> SMS </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVSocialServiceType:TWITTER"><apiName>TWITTER</apiName><shortdesc> Twitter </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>TWITTER</apiData><apiType value="String"/></apiValueDef><apiDesc> Twitter </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVFacebookAppEvent"><apiName>GVFacebookAppEvent</apiName><shortdesc> GVFacebookAppEvent </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GVFacebookAppEvent </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions:GVFacebookAppEvent:GVFacebookAppEvent"><apiName>GVFacebookAppEvent</apiName><shortdesc>
	 Creates a new FacebookAppEvent
	 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>eventName</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
	 Creates a new FacebookAppEvent
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions:GVFacebookAppEvent:setParameter"><apiName>setParameter</apiName><shortdesc>
	 Set a parameter for this event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>paramName</apiItemName><apiType value="String"/><apiDesc>name of the paramter to set
	 </apiDesc></apiParam><apiParam><apiItemName>paramValue</apiItemName><apiType value="String"/><apiDesc>value of the parameter to set
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Set a parameter for this event.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GVFacebookAppEvent:setValueToSum"><apiName>setValueToSum</apiName><shortdesc>
	 Set the valueToSum for this event
	 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>the value to sum
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Set the valueToSum for this event
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_ACHIEVED_LEVEL"><apiName>EVENT_NAME_ACHIEVED_LEVEL</apiName><shortdesc> Log this event when the user has achieved a level in the app.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_level_achieved</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when the user has achieved a level in the app. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_ACTIVATED_APP"><apiName>EVENT_NAME_ACTIVATED_APP</apiName><shortdesc> Log this event when an app is being activated.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_activate_app</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when an app is being activated. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_ADDED_PAYMENT_INFO"><apiName>EVENT_NAME_ADDED_PAYMENT_INFO</apiName><shortdesc> Log this event when the user has entered their payment info.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_add_payment_info</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when the user has entered their payment info. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_ADDED_TO_CART"><apiName>EVENT_NAME_ADDED_TO_CART</apiName><shortdesc>
     Log this event when the user has added an item to their cart.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_add_to_cart</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Log this event when the user has added an item to their cart.
     The valueToSum passed to logEvent should be the item's price.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_ADDED_TO_WISHLIST"><apiName>EVENT_NAME_ADDED_TO_WISHLIST</apiName><shortdesc>
     Log this event when the user has added an item to their wishlist.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_add_to_wishlist</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Log this event when the user has added an item to their wishlist.
     The valueToSum passed to logEvent should be the item's price.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_COMPLETED_REGISTRATION"><apiName>EVENT_NAME_COMPLETED_REGISTRATION</apiName><shortdesc> Log this event when a user has completed registration with the app.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_complete_registration</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when a user has completed registration with the app. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_COMPLETED_TUTORIAL"><apiName>EVENT_NAME_COMPLETED_TUTORIAL</apiName><shortdesc> Log this event when the user has completed a tutorial in the app.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_tutorial_completion</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when the user has completed a tutorial in the app. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_INITIATED_CHECKOUT"><apiName>EVENT_NAME_INITIATED_CHECKOUT</apiName><shortdesc>
     Log this event when the user has entered the checkout process.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_initiated_checkout</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Log this event when the user has entered the checkout process.
     The valueToSum passed to logEvent should be the total price in the cart.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_PURCHASED"><apiName>EVENT_NAME_PURCHASED</apiName><shortdesc>
     Log this event when the user has completed a purchase.</shortdesc><prolog><asCustoms><link>AppEventsLogger#logPurchase(java.math.BigDecimal, java.util.Currency)} method is a shortcut for
     logging this event.
     </link></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_purchase</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Log this event when the user has completed a purchase.
     The {</apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_RATED"><apiName>EVENT_NAME_RATED</apiName><shortdesc>
     Log this event when the user has rated an item in the app.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_rate</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Log this event when the user has rated an item in the app.
     The valueToSum passed to logEvent should be the numeric rating.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_SEARCHED"><apiName>EVENT_NAME_SEARCHED</apiName><shortdesc> Log this event when a user has performed a search within the app.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_search</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when a user has performed a search within the app. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_SPENT_CREDITS"><apiName>EVENT_NAME_SPENT_CREDITS</apiName><shortdesc>
     Log this event when the user has spent app credits.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_spent_credits</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Log this event when the user has spent app credits.
     The valueToSum passed to logEvent should be the number of credits spent.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_UNLOCKED_ACHIEVEMENT"><apiName>EVENT_NAME_UNLOCKED_ACHIEVEMENT</apiName><shortdesc> Log this event when the user has unlocked an achievement in the app.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_achievement_unlocked</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when the user has unlocked an achievement in the app. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_NAME_VIEWED_CONTENT"><apiName>EVENT_NAME_VIEWED_CONTENT</apiName><shortdesc> Log this event when a user has viewed a form of content in the app.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_mobile_content_view</apiData><apiType value="String"/></apiValueDef><apiDesc> Log this event when a user has viewed a form of content in the app. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_CONTENT_ID"><apiName>EVENT_PARAM_CONTENT_ID</apiName><shortdesc>
     Parameter key used to specify an ID for the specific piece of content being logged about.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_content_id</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify an ID for the specific piece of content being logged about.
     Could be an EAN, article identifier, etc., depending on the nature of the app.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_CONTENT_TYPE"><apiName>EVENT_PARAM_CONTENT_TYPE</apiName><shortdesc>
     Parameter key used to specify a generic content type/family for the logged event, e.g.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_content_type</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify a generic content type/family for the logged event, e.g. "music", "photo",
     "video".  Options to use will vary based upon what the app is all about.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_CURRENCY"><apiName>EVENT_PARAM_CURRENCY</apiName><shortdesc>
     Parameter key used to specify currency used with logged event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_currency</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify currency used with logged event.  E.g. "USD", "EUR", "GBP".
     See ISO-4217 for specific values.  One reference for these is http://en.wikipedia.org/wiki/ISO_4217.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_DESCRIPTION"><apiName>EVENT_PARAM_DESCRIPTION</apiName><shortdesc>
     Parameter key used to specify a description appropriate to the event being logged.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_description</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify a description appropriate to the event being logged.
     E.g., the name of the achievement unlocked in the EVENT_NAME_ACHIEVEMENT_UNLOCKED event.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_LEVEL"><apiName>EVENT_PARAM_LEVEL</apiName><shortdesc> Parameter key used to specify the level achieved in a EVENT_NAME_LEVEL_ACHIEVED event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_level</apiData><apiType value="String"/></apiValueDef><apiDesc> Parameter key used to specify the level achieved in a EVENT_NAME_LEVEL_ACHIEVED event. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_MAX_RATING_VALUE"><apiName>EVENT_PARAM_MAX_RATING_VALUE</apiName><shortdesc>
     Parameter key used to specify the maximum rating available for the EVENT_NAME_RATE event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_max_rating_value</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify the maximum rating available for the EVENT_NAME_RATE event.
     E.g., "5" or "10".
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_NUM_ITEMS"><apiName>EVENT_PARAM_NUM_ITEMS</apiName><shortdesc>
     Parameter key used to specify how many items are being processed for an EVENT_NAME_INITIATED_CHECKOUT
     or EVENT_NAME_PURCHASE event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_num_items</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify how many items are being processed for an EVENT_NAME_INITIATED_CHECKOUT
     or EVENT_NAME_PURCHASE event.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_PAYMENT_INFO_AVAILABLE"><apiName>EVENT_PARAM_PAYMENT_INFO_AVAILABLE</apiName><shortdesc>
     Parameter key used to specify whether payment info is available for the EVENT_NAME_INITIATED_CHECKOUT event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_payment_info_available</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify whether payment info is available for the EVENT_NAME_INITIATED_CHECKOUT event.
     EVENT_PARAM_VALUE_YES and EVENT_PARAM_VALUE_NO are good canonical values to use for this parameter.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_REGISTRATION_METHOD"><apiName>EVENT_PARAM_REGISTRATION_METHOD</apiName><shortdesc>
     Parameter key used to specify method user has used to register for the app, e.g., "Facebook", "email",
     "Twitter", etc.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_registration_method</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify method user has used to register for the app, e.g., "Facebook", "email",
     "Twitter", etc.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_SEARCH_STRING"><apiName>EVENT_PARAM_SEARCH_STRING</apiName><shortdesc> Parameter key used to specify the string provided by the user for a search operation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_search_string</apiData><apiType value="String"/></apiValueDef><apiDesc> Parameter key used to specify the string provided by the user for a search operation. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_SUCCESS"><apiName>EVENT_PARAM_SUCCESS</apiName><shortdesc>
     Parameter key used to specify whether the activity being logged about was successful or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fb_success</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Parameter key used to specify whether the activity being logged about was successful or not.
     EVENT_PARAM_VALUE_YES and EVENT_PARAM_VALUE_NO are good canonical values to use for this parameter.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_VALUE_NO"><apiName>EVENT_PARAM_VALUE_NO</apiName><shortdesc> No-valued parameter value to be used with parameter keys that need a Yes/No value </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="String"/></apiValueDef><apiDesc> No-valued parameter value to be used with parameter keys that need a Yes/No value </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:EVENT_PARAM_VALUE_YES"><apiName>EVENT_PARAM_VALUE_YES</apiName><shortdesc> Yes-valued parameter value to be used with parameter keys that need a Yes/No value </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="String"/></apiValueDef><apiDesc> Yes-valued parameter value to be used with parameter keys that need a Yes/No value </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:com.milkmangames.nativeextensions:eventName"><apiName>eventName</apiName><shortdesc> Event Name </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> Event Name </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:com.milkmangames.nativeextensions:params"><apiName>params</apiName><shortdesc> Custom Params </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc> Custom Params </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookAppEvent:com.milkmangames.nativeextensions:valueToSum"><apiName>valueToSum</apiName><shortdesc> Value to Sum </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> Value to Sum </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVHttpMethod"><apiName>GVHttpMethod</apiName><shortdesc> Http Method </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Http Method </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions:GVHttpMethod:DELETE"><apiName>DELETE</apiName><shortdesc> DELETE Method </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DELETE</apiData><apiType value="String"/></apiValueDef><apiDesc> DELETE Method </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVHttpMethod:GET"><apiName>GET</apiName><shortdesc> GET Method </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>GET</apiData><apiType value="String"/></apiValueDef><apiDesc> GET Method </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVHttpMethod:POST"><apiName>POST</apiName><shortdesc> POST Method </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>POST</apiData><apiType value="String"/></apiValueDef><apiDesc> POST Method </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVTwitterDispatcher"><apiName>GVTwitterDispatcher</apiName><shortdesc> GVTwitterDispatcher </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.milkmangames.nativeextensions:GVDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GVTwitterDispatcher </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:GVTwitterDispatcher_com.milkmangames.nativeextensions.events.GVTwitterEvent_TW_DIALOG_FAILED"><apiName>TW_DIALOG_FAILED</apiName><shortdesc> Dispatched when a Twitter Dialog has Failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog has Failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVTwitterDispatcher_com.milkmangames.nativeextensions.events.GVTwitterEvent_TW_DIALOG_CANCELED"><apiName>TW_DIALOG_CANCELED</apiName><shortdesc> Dispatched when a Twitter Dialog was cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog was cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVTwitterDispatcher_com.milkmangames.nativeextensions.events.GVTwitterEvent_TW_DIALOG_FINISHED"><apiName>TW_DIALOG_FINISHED</apiName><shortdesc> Dispatched when a Twitter Dialog is Finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog is Finished </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions:GVTwitterDispatcher:addDialogListener"><apiName>addDialogListener</apiName><shortdesc>
	 Convenience method that adds an event listener for when a Twitter dialog request is completed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>instance of GVTwitterDispatcher
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVTwitterDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>the event listener function, should take GVFacebookEvent as a parameter
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method that adds an event listener for when a Twitter dialog request is completed.  This listener will be a weak reference and automatically removed after dispatch.  For backwards compatibility, <codeph>GoViral.goViral</codeph> will also dispatch the related event.
	 
	 The listener parameter should take the form of <codeph>function(e:GVTwitterEvent) {}</codeph>.  You may check the value of <codeph>e.type</codeph> which will be either <codeph>GVTwitterEvent.TW_DIALOG_FINISHED</codeph> if the dialog completed successfully, <codeph>GVTwitterEvent.TW_DIALOG_CANCELED</codeph> if the dialog was canceled, or <codeph>GVTwitterEvent.TW_DIALOG_FAILED</codeph> if the dialog was not displayed successfully.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.events.xml#GVTwitterEvent"><linktext>com.milkmangames.nativeextensions.events.GVTwitterEvent</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVFacebookRequestActionType"><apiName>GVFacebookRequestActionType</apiName><shortdesc> GVFacebookRequestActionType </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GVFacebookRequestActionType </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions:GVFacebookRequestActionType:ASK_FOR"><apiName>ASK_FOR</apiName><shortdesc> Ask For </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>askfor</apiData><apiType value="String"/></apiValueDef><apiDesc> Ask For </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookRequestActionType:SEND"><apiName>SEND</apiName><shortdesc> Send </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>send</apiData><apiType value="String"/></apiValueDef><apiDesc> Send </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookRequestActionType:TURN"><apiName>TURN</apiName><shortdesc> Turn </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>turn</apiData><apiType value="String"/></apiValueDef><apiDesc> Turn </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVFacebookErrorCategory"><apiName>GVFacebookErrorCategory</apiName><shortdesc> Facebook Error Category Values </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Facebook Error Category Values </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:BAD_REQUEST"><apiName>BAD_REQUEST</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>-2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:INVALID"><apiName>INVALID</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:OTHER"><apiName>OTHER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>-1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:PERMISSIONS"><apiName>PERMISSIONS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:REOPEN_SESSION"><apiName>REOPEN_SESSION</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:RETRY"><apiName>RETRY</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:SERVER"><apiName>SERVER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:THROTTLING"><apiName>THROTTLING</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookErrorCategory:USER_CANCELED"><apiName>USER_CANCELED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVShareDispatcher"><apiName>GVShareDispatcher</apiName><shortdesc> GVShareDispatcher </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.milkmangames.nativeextensions:GVDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GVShareDispatcher </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions:GVShareDispatcher_com.milkmangames.nativeextensions.events.GVShareEvent_SOCIAL_COMPOSER_FINISHED"><apiName>SOCIAL_COMPOSER_FINISHED</apiName><shortdesc> Dispatched when a social composer view is finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVShareEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a social composer view is finished </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVShareDispatcher_com.milkmangames.nativeextensions.events.GVShareEvent_SOCIAL_COMPOSER_CANCELED"><apiName>SOCIAL_COMPOSER_CANCELED</apiName><shortdesc> Dispatched when a social composer view is canceled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVShareEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a social composer view is canceled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions:GVShareDispatcher_com.milkmangames.nativeextensions.events.GVShareEvent_GENERIC_MESSAGE_SHARED"><apiName>GENERIC_MESSAGE_SHARED</apiName><shortdesc> Dispatched after a Generic message sharing intent has been completed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.events.GVShareEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a Generic message sharing intent has been completed </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions:GVShareDispatcher:addDialogListener"><apiName>addDialogListener</apiName><shortdesc>
	 Convenience method that adds an event listener for when a Social Composer or Generic Sharing dialog request is completed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>instance of GVShareDispatcher
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions:GVShareDispatcher</apiOperationClassifier></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>the event listener function, should take GVFacebookEvent as a parameter
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method that adds an event listener for when a Social Composer or Generic Sharing dialog request is completed.  This listener will be a weak reference and automatically removed after dispatch.  For backwards compatibility, <codeph>GoViral.goViral</codeph> will also dispatch the related event.
	 
	 The listener parameter should take the form of <codeph>function(e:GVShareEvent) {}</codeph>.  You may check the value of <codeph>e.type</codeph> which will be either <codeph>GVShareEvent.GENERIC_MESSAGE_SHARED</codeph>, <codeph>GVShareEvent.SOCIAL_COMPOSER_FINISHED</codeph>, or <codeph>GVShareEvent.SOCIAL_COMPOSER_CANCELED</codeph>, depending on how the dialog was completed.  The property <codeph>e.socialServiceType</codeph> will be the related constant from <codeph>GVSocialServiceType</codeph> if the dialog was a social composer dialog.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.xml#GVSocialServiceType"><linktext>com.milkmangames.nativeextensions.GVSocialServiceType</linktext></link><link href="com.milkmangames.nativeextensions.events.xml#GVShareEvent"><linktext>com.milkmangames.nativeextensions.events.GVShareEvent</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions:GVFacebookFriend"><apiName>GVFacebookFriend</apiName><shortdesc> Facebook Friend </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Facebook Friend </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions:GVFacebookFriend:GVFacebookFriend"><apiName>GVFacebookFriend</apiName><shortdesc> Create New GVFacebookFriend </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>extras</apiItemName><apiType value="Object"/></apiParam></apiConstructorDef><apiDesc> Create New GVFacebookFriend </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions:GVFacebookFriend:email"><apiName>email</apiName><shortdesc> Email </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Email </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GVFacebookFriend:getPropertyString"><apiName>getPropertyString</apiName><shortdesc>
	 Retrieve a particular property for this facebook User.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the property as a string, if it is available.  Otherwise, null.
	 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>property</apiItemName><apiType value="String"/><apiDesc>the name of the property you wish to retrieve (for instance, "link")
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Retrieve a particular property for this facebook User.  
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions:GVFacebookFriend:toString"><apiName>toString</apiName><shortdesc> Return String Representation </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Return String Representation </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:id"><apiName>id</apiName><shortdesc> Friend Facebook ID </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> Friend Facebook ID </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:name"><apiName>name</apiName><shortdesc> Friend Display Name </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> Friend Display Name </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:properties"><apiName>properties</apiName><shortdesc> A generic Object with any other key/values for this user </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc> A generic Object with any other key/values for this user </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:bio:get"><apiName>bio</apiName><shortdesc> Bio </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Bio </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:gender:get"><apiName>gender</apiName><shortdesc> Gender </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Gender </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:installed:get"><apiName>installed</apiName><shortdesc> True if they have your app installed (must have come from a request with an 'installed' field property or will return false) </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> True if they have your app installed (must have come from a request with an 'installed' field property or will return false) </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:link:get"><apiName>link</apiName><shortdesc> Profile Link </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Profile Link </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions:GVFacebookFriend:locationName:get"><apiName>locationName</apiName><shortdesc> Location Name </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Location Name </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>