package com.gotchaslots.common.mobile.ui.common.components.freeActionScript.fountain{	import com.gotchaslots.common.mobile.ui.common.components.SpriteEx;	import com.greensock.TweenMax;	import com.greensock.easing.*;		import fl.motion.BezierSegment;		import flash.display.DisplayObject;	import flash.display.Graphics;	import flash.geom.Point;
		public class MovingFountainInitializer	{		private var _object:DisplayObject;		private var _startPoint:Point;				private var _t:Number;		private var _bezier:BezierSegment;		private var _renderMotion:Boolean = false;		private var _initializeDuration:Number = 8;		private var _lastX:Number;		private var _lastY:Number;				public function MovingFountainInitializer(object:DisplayObject, startPoint:Point)		{			_object = object;			_startPoint = startPoint;		}				public function get t():Number		{			return _t;		}				public function set t(value:Number):void		{			_t = value;			var point:Point = _bezier.getValue(_t);			var dx:Number = point.x - _lastX;			var dy:Number = point.y - _lastY;						_object.x += dx;			_object.y += dy;			_lastX = point.x;			_lastY = point.y;		}				public function start(controlPoint:Point, endPoint:Point):void		{			_bezier = new BezierSegment(_startPoint, controlPoint, controlPoint, endPoint);			if (true == _renderMotion) render(controlPoint);						_t = 0;						_object.x = _startPoint.x;			_object.y = _startPoint.y;						var point:Point = _bezier.getValue(0);			_lastX = point.x;			_lastY = point.y;						TweenMax.to(this, _initializeDuration, {t: 1, ease: Quint.easeOut});		}				public function destroy():void		{			TweenMax.killTweensOf(this);		}				private function render(controlPoint:Point):void		{			var parentGraphics:Graphics = SpriteEx(_object.parent).graphics;			parentGraphics.lineStyle(1, 0xcc0000, .15);			parentGraphics.moveTo(_startPoint.x, _startPoint.y);						var dt:Number = .05;			var nt:Number = 0;			var point:Point;			while (nt <= 1 + dt)			{				point = _bezier.getValue(nt);				parentGraphics.lineTo(point.x, point.y);				nt += dt;			}			with (parentGraphics)			{				lineStyle(1, 0xcc0000);				moveTo(_startPoint.x, _startPoint.y);				lineTo(controlPoint.x, controlPoint.y);			}		}	}}