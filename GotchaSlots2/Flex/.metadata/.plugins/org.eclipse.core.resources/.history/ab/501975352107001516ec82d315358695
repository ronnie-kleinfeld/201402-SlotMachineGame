package com.gotchaslots.common.mobile.ui.machine.presentation.collectibles
{
	import com.gotchaslots.common.mobile.data.Main;
	import com.gotchaslots.common.mobile.data.machine.spline.SplinesData;
	import com.gotchaslots.common.mobile.data.machine.valuator.collectibles.GoldValuatorData;
	import com.gotchaslots.common.mobile.ui.common.components.Flipper2;
	import com.gotchaslots.common.mobile.ui.common.components.stardust.moneyTrail.MoneyTrail;
	import com.gotchaslots.common.mobile.ui.machine.MachineView;
	import com.gotchaslots.common.mobile.ui.machine.presentation.base.BasePresentation;
	
	import flash.events.Event;
	
	public class GoldCollectiblesPresentation extends BasePresentation
	{
		// properties
		protected override function get ValuatorClass():Class
		{
			return GoldValuatorData;
		}
		
		// class
		public function GoldCollectiblesPresentation(onClick:Function, onClose:Function, view:MachineView)
		{
			super(306, onClick, onClose, view);
		}
		
		// methods
		protected override function DoFlipper2():void
		{
			var flipper2:Flipper2;
			for (var i:int = 0; i < _valuatorsHandler.Gold.Payboxes.length; i++)
			{
				flipper2 = new Flipper2(150, 10, Main.Instance.ActiveMachine.LobbyMachine.PayboxFramePngs);
				flipper2.x = -2 + _valuatorsHandler.Gold.Payboxes[i].Rect.x;
				flipper2.y = -2 + _valuatorsHandler.Gold.Payboxes[i].Rect.y + 48;
				if (i == _valuatorsHandler.Gold.Payboxes.length - 1)
				{
					flipper2.addEventListener(Event.COMPLETE, OnFlipper2Complete);
				}
				
				addChild(flipper2);
				flipper2.Start();
			}
		}
		private function OnFlipper2Complete(event:Event):void
		{
			DoPostFlipper2();
		}
		
		protected override function DoMoneyTrails():void
		{
			var length:int =  _valuatorsHandler.Gold.Payboxes.length;
			for (var i:int = 0; i < length; i++)
			{
				var moneyTrail:MoneyTrail = new MoneyTrail(length, _valuatorsHandler.Gold.Payboxes[i].Center, null, SplinesData.CollectiblesPanelPoint);
				moneyTrail.y = 48;
				if (i == length - 1)
				{
					moneyTrail.addEventListener(Event.COMPLETE, OnMoneyTrailsComplete);
				}
				addChild(moneyTrail);
			}
		}
		private function OnMoneyTrailsComplete(event:Event):void
		{
			var moneyTrail:MoneyTrail = MoneyTrail(event.currentTarget);
			moneyTrail.removeEventListener(Event.COMPLETE, OnMoneyTrailsComplete);
			DoPostMoneyTrails();
		}
	}
}